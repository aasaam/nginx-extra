# enabled modules
load_module "/usr/lib/nginx/modules/ngx_http_brotli_filter_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_brotli_static_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_echo_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_geoip2_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so";
load_module "/usr/lib/nginx/modules/ngx_http_set_misc_module.so";

# optional modules
${ASM_NGX_EXTRA_MODULE_HTTP_ENCRYPTED_SESSION_COMMENT} load_module "/usr/lib/nginx/modules/ngx_http_encrypted_session_module.so";
${ASM_NGX_EXTRA_MODULE_NCHAN_COMMENT} load_module "/usr/lib/nginx/modules/ngx_nchan_module.so";

# stream
${ASM_NGX_EXTRA_STREAM_COMMENT} load_module "/usr/lib/nginx/modules/ngx_stream_module.so";
${ASM_NGX_EXTRA_STREAM_COMMENT} load_module "/usr/lib/nginx/modules/ngx_stream_geoip2_module.so";

user nginx;
pcre_jit on;
worker_processes ${ASM_NGX_EXTRA_WORKER_PROCESSES};
worker_rlimit_nofile ${ASM_NGX_EXTRA_WORKER_RLIMIT_NOFILE};
error_log /dev/stdout ${ASM_NGX_EXTRA_ERROR_LOG_LEVEL};

events {
  worker_connections ${ASM_NGX_EXTRA_WORKER_CONNECTIONS};
  use epoll;
  multi_accept on;
}

# stream
${ASM_NGX_EXTRA_STREAM_COMMENT} stream {
${ASM_NGX_EXTRA_STREAM_COMMENT}   error_log /dev/stdout ${ASM_NGX_EXTRA_ERROR_LOG_LEVEL};
${ASM_NGX_EXTRA_STREAM_COMMENT}   include /.defaults/stream.conf;
${ASM_NGX_EXTRA_STREAM_COMMENT}   include /.defaults/ssl/${ASM_NGX_EXTRA_SSL_PROFILE}.conf;
${ASM_NGX_EXTRA_STREAM_COMMENT}   ssl_stapling ${ASM_NGX_EXTRA_SSL_STAPLING};
${ASM_NGX_EXTRA_STREAM_COMMENT}   ssl_stapling_verify ${ASM_NGX_EXTRA_SSL_STAPLING_VERIFY};
${ASM_NGX_EXTRA_STREAM_COMMENT}   include /stream.d/*.conf;
${ASM_NGX_EXTRA_STREAM_COMMENT} }

http {
  error_log /dev/stdout ${ASM_NGX_EXTRA_ERROR_LOG_LEVEL};

  include /.defaults/http.conf;
  include /.defaults/ssl/${ASM_NGX_EXTRA_SSL_PROFILE}.conf;

  ${ASM_NGX_EXTRA_ACCESS_LOG_COMMENT} access_log /dev/stdout http_jsonlog;

  ssl_stapling ${ASM_NGX_EXTRA_SSL_STAPLING};
  ssl_stapling_verify ${ASM_NGX_EXTRA_SSL_STAPLING_VERIFY};
  client_body_timeout  ${ASM_NGX_EXTRA_CLIENT_BODY_TIMEOUT};
  client_header_timeout ${ASM_NGX_EXTRA_CLIENT_HEADER_TIMEOUT};
  keepalive_requests ${ASM_NGX_EXTRA_KEEPALIVE_REQUESTS};
  keepalive_timeout ${ASM_NGX_EXTRA_KEEPALIVE_TIMEOUT};
  send_timeout ${ASM_NGX_EXTRA_SEND_TIMEOUT};

  variables_hash_max_size ${ASM_NGX_EXTRA_VARIABLES_HASH_MAX_SIZE};

  proxy_buffering on;
  proxy_buffers 16 128k;
  proxy_buffer_size 128k;
  proxy_cache_methods GET HEAD;
  proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_429;
  proxy_http_version 1.1;
  proxy_read_timeout 20s;
  proxy_cache_valid 200 301 5m;
  proxy_request_buffering off;

  # proxy cache
  ${ASM_NGX_EXTRA_PROXY_CACHE_FAST_COMMENT} proxy_cache_path /nginx-fast levels=1:2 keys_zone=PROXY_CACHE_FAST:1m use_temp_path=off max_size=${ASM_NGX_EXTRA_PROXY_CACHE_FAST_SIZE} inactive=10m;
  ${ASM_NGX_EXTRA_PROXY_CACHE_SLOW_COMMENT} proxy_cache_path /nginx-slow levels=1:2 keys_zone=PROXY_CACHE_SLOW:1m use_temp_path=off max_size=${ASM_NGX_EXTRA_PROXY_CACHE_SLOW_SIZE} inactive=60m;

  server {
    listen 127.0.0.1:${ASM_NGX_EXTRA_MONITORING_PORT} default_server;

    access_log off;

    location = /stub_status {
      allow 127.0.0.1;
      deny all;
      stub_status on;
    }

    location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /";
    }

    location / {
      return 400;
    }
  }

  ${ASM_NGX_EXTRA_DEFAULT_HOST_COMMENT} include /.defaults/default_server.conf;

  include /http.d/*.conf;
}
